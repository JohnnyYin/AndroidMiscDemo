// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: ./Person.proto
package com.johnnyyin.protobufdemo;

import com.squareup.wire.Message;
import com.squareup.wire.ProtoField;

import static com.squareup.wire.Message.Datatype.INT32;
import static com.squareup.wire.Message.Datatype.STRING;
import static com.squareup.wire.Message.Label.REQUIRED;

public final class Person extends TTMessage {
    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_NAME = "";
    public static final Integer DEFAULT_ID = 0;
    public static final String DEFAULT_EMAIL = "";

    @ProtoField(tag = 1, type = STRING, label = REQUIRED)
    public final String name;

    @ProtoField(tag = 2, type = INT32, label = REQUIRED)
    public final Integer id;

    @ProtoField(tag = 3, type = STRING)
    public final String email;

    public Person(String name, Integer id, String email) {
        this.name = name;
        this.id = id;
        this.email = email;
    }

    private Person(Builder builder) {
        this(builder.name, builder.id, builder.email);
        setBuilder(builder);
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Person)) return false;
        Person o = (Person) other;
        return equals(name, o.name)
                && equals(id, o.id)
                && equals(email, o.email);
    }

    @Override
    public int hashCode() {
        int result = hashCode;
        if (result == 0) {
            result = name != null ? name.hashCode() : 0;
            result = result * 37 + (id != null ? id.hashCode() : 0);
            result = result * 37 + (email != null ? email.hashCode() : 0);
            hashCode = result;
        }
        return result;
    }

    public static final class Builder extends Message.Builder<Person> {

        public String name;
        public Integer id;
        public String email;

        public Builder() {
        }

        public Builder(Person message) {
            super(message);
            if (message == null) return;
            this.name = message.name;
            this.id = message.id;
            this.email = message.email;
        }

        public Builder name(String name) {
            this.name = name;
            return this;
        }

        public Builder id(Integer id) {
            this.id = id;
            return this;
        }

        public Builder email(String email) {
            this.email = email;
            return this;
        }

        @Override
        public Person build() {
            checkRequiredFields();
            return new Person(this);
        }
    }
}
